## TOY

# - name: comparison_v_adversarial
#   experiment_name: toy
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.025
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial
#   # pl trainer
#   early_stopping_patience: 250
#   n_trials: 5
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1e-5
#   experiment_name: toy
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.025
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1e-5
#   # pl trainer
#   early_stopping_patience: 250
#   n_trials: 5
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1e-4
#   experiment_name: toy
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.025
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1e-4
#   # pl trainer
#   early_stopping_patience: 250
#   n_trials: 5
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1e-3
#   experiment_name: toy
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.025
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1e-3
#   # pl trainer
#   early_stopping_patience: 250
#   n_trials: 5
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1e-2
#   experiment_name: toy
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.025
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1e-2
#   # pl trainer
#   early_stopping_patience: 250
#   n_trials: 5
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1e-1
#   experiment_name: toy
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.025
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1e-1
#   # pl trainer
#   early_stopping_patience: 250
#   n_trials: 5
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1
#   experiment_name: toy
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.025
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1
#   # pl trainer
#   early_stopping_patience: 250
#   n_trials: 5
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_2
#   experiment_name: toy
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.025
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 2
#   # pl trainer
#   early_stopping_patience: 250
#   n_trials: 5
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

- name: comparison_v_adversarial_multistep_var_lr
  experiment_name: toy
  # hparams
  batch_size: 1024
  hidden_dim: 50
  beta_elbo: 1
  beta_ood: 1
  prior_alpha: 1.025
  prior_beta: 0.5
  ood_x_generation_method: adversarial_multistep
  adversarial_multistep_learning_rate: 1
  # pl trainer
  early_stopping_patience: 250
  n_trials: 1
  max_epochs: -1
  log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
  flush_logs_every_n_steps: 50 # How often does the log writes to disc
  progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
  check_val_every_n_epoch: 1 # Check val every n train epochs

## UCI_CCPP

# - name: comparison_v_adversarial
#   experiment_name: uci_ccpp
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.05
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial
#   # pl trainer
#   n_trials: 20
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1e-5
#   experiment_name: uci_ccpp
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.05
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1e-5
#   # pl trainer
#   n_trials: 20
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1e-4
#   experiment_name: uci_ccpp
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.05
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1e-4
#   # pl trainer
#   n_trials: 20
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1e-3
#   experiment_name: uci_ccpp
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.05
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1e-3
#   # pl trainer
#   n_trials: 20
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1e-2
#   experiment_name: uci_ccpp
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.05
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1e-2
#   # pl trainer
#   n_trials: 20
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1e-1
#   experiment_name: uci_ccpp
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.05
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1e-1
#   # pl trainer
#   n_trials: 20
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_1
#   experiment_name: uci_ccpp
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.05
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 1
#   # pl trainer
#   n_trials: 20
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs

# - name: comparison_v_adversarial_multistep_2
#   experiment_name: uci_ccpp
#   # hparams
#   batch_size: 1024
#   hidden_dim: 50
#   beta_elbo: 1
#   beta_ood: 1
#   prior_alpha: 1.05
#   prior_beta: 0.5
#   ood_x_generation_method: adversarial_multistep
#   adversarial_multistep_learning_rate: 2
#   # pl trainer
#   n_trials: 20
#   max_epochs: -1
#   log_every_n_steps: 500 # How often to log within steps (defaults to every 50 steps)
#   flush_logs_every_n_steps: 50 # How often does the log writes to disc
#   progress_bar_refresh_rate: 0 # How often to refresh progress bar (in steps).
#   check_val_every_n_epoch: 1 # Check val every n train epochs
